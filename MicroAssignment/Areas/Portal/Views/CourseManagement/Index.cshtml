@model PagedList.IPagedList<MicroAssignment.Models.Course>

@{
    ViewBag.Title = "Course-Index";
    int sn = 1;
}

<h2>Departmental Courses </h2>

<p>
    @Html.ActionLink("Add Course", "Create", null, new { @class = "btn btn-primary" })
</p>

<div style="margin-bottom:7px">
    @using (Html.BeginForm())
    {
        <div style="margin-bottom:5px">
            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new {@class="form-control",@style="width:300px;float:left;margin-right:3px", @placeholder="Search"}) 
            <input class = "btn btn-default" type="submit" value="Search >>" />
        </div>
        <span style="color:#808080">Search Course by: CourseName, CourseCode, Department, Semester, and Session</span>
    }
</div>
<hr />
<table class="table table-hover table-bordered table-striped">
    <tr>
        <th>S/N</th>
        <th>
            CourseName
        </th>
        <th>
            Department Name
        </th>
        <th>
            Credit Unit
        </th>
        <th>
            Course Code
        </th>
        <th>
            Session
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @(sn++)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CourseName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Department.DepartmentName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreditUnit)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CourseCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Session.FullSession)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.CourseID }) |
            @Html.ActionLink("Details", "Details", new { id=item.CourseID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.CourseID })
        </td>
    </tr>
}

</table>


<p style="text-align:right; margin-top:10px">
        <ul class="pager">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of   @Model.PageCount
     
    @if (Model.HasPreviousPage)
    {
        <li>@Ajax.ActionLink("<<  First", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }, new AjaxOptions { UpdateTargetId = "main" }, new {@class = "small button" })</li>
        @Html.Raw(" ");
        <li>@Ajax.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }, new AjaxOptions { UpdateTargetId = "main" }, new {@class = "small button" })</li>
    }
    else
    {
       
        @Html.Raw(" ");
        @: <li><span><< Prev</span> </li>
    }
      
    @if (Model.HasNextPage)
    {
        
       <li> @Ajax.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }, new AjaxOptions { UpdateTargetId = "main" }, new {@class = "small button" })</li>
         @Html.Raw(" ");
       <li> @Ajax.ActionLink("Last >>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }, new AjaxOptions { UpdateTargetId = "main" }, new {@class = "small button" })</li>
    }
    else
    {
        @:<li><span>Next >></span> </li>
        @Html.Raw(" ")
       
    }
            </ul>
</p>